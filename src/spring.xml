<?xml version="1.0" encoding="UTF-8"?>
<beans 
      xmlns="http://www.springframework.org/schema/beans"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xmlns:context="http://www.springframework.org/schema/context"
      xmlns:aop="http://www.springframework.org/schema/aop"
      xmlns:tx="http://www.springframework.org/schema/tx"
	  xmlns:mvc="http://www.springframework.org/schema/mvc"
		
      xsi:schemaLocation="
	
	  http://www.springframework.org/schema/beans 
	  http://www.springframework.org/schema/beans/spring-beans.xsd
	  
	  http://www.springframework.org/schema/context
      http://www.springframework.org/schema/context/spring-context.xsd
 	  
	  http://www.springframework.org/schema/aop 
	  http://www.springframework.org/schema/aop/spring-aop.xsd
	  
	  http://www.springframework.org/schema/tx
      http://www.springframework.org/schema/tx/spring-tx.xsd
    
      http://www.springframework.org/schema/mvc
      http://www.springframework.org/schema/mvc/spring-mvc.xsd
        
      ">
      <bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
			<property name="locations">
				<value>classpath:jdbc.properties</value>
			</property>
		</bean>
      <!-- 配置c3p0数据连接池 -->
      <bean id="c3podatasource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
      	<property name="driverClass" value="${jdbc.driverClassName}"></property>
      	<property name="jdbcUrl" value="${jdbc.url}"></property>
      	<property name="user" value="${jdbc.username}"></property>
      	<property name="password" value="${jdbc.password}"></property>
      </bean>
      <!-- 配置SqlSessionFactoryBean(用于访问数据库的对象)，
      		目的：加载mybaits配置文件和映射文件，即替代原Mybatis工具类的作用 
      		daoimpl层中 还是要引入SqlSessionFactory对象  然后通过set方法注入（在配置文件中配置  见后面）		
      -->
      <bean id="sqlsessionfactory" class="org.mybatis.spring.SqlSessionFactoryBean">
      	<property name="configLocation" value="classpath:mybatis.xml"></property>
      	<property name="dataSource" ref="c3podatasource"></property>
      </bean>
      <!-- 配置事务管理器 -->
      <bean id="transection" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
      	<property name="dataSource" ref="c3podatasource"></property>
      </bean>
      <!-- 配置事务通知  即让哪些方法需要事务支持 -->
      <tx:advice id="tx" transaction-manager="transection">
      	<tx:attributes>
      		<tx:method name="save" propagation="REQUIRED"/><!-- 指定方法无论有无事务都加上 -->
      		<tx:method name="*" propagation="SUPPORTS"/><!--当方法有事务的时候就加事务，没有事务的时候就不加--> 
      	</tx:attributes>
      </tx:advice>
      <!-- 配置事务切面 即让哪些包下的类需要事务-->
      <aop:config>
      	<aop:pointcut expression="execution(* cn.service.impl.*.*(..))" id="servicePointCut"/>
      	<aop:advisor advice-ref="transection" pointcut-ref="servicePointCut"/>
      </aop:config>
      <!-- 综上，spring与mybatis的结合  spring的主配置文件的作用就是：设置连接池、设置sqlsessionfactory、设置事务相关信息 -->
      
      
      
<!-- 	  <bean id="controllerid" class="controler.Controllers"> -->
<!-- 	  	<property name="service" ref="serviceid"></property> -->
<!-- 	  </bean> -->
	  <bean id="serviceid" class="service.impl.ServiceImpl">
	  	<property name="dao" ref="daoid"></property>
	  </bean>
      <bean id="daoid" class="dao.impl.DaoImpl">
      	<property name="sqlSessionFactory" ref="sqlsessionfactory"></property><!-- 注入sqlSessionFactory属性 -->
      </bean>
      <!-- 配置与springMVC -->
      <context:component-scan base-package="controler"></context:component-scan>
      <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
      	<property name="prefix" value="/view/"></property>
      	<property name="suffix" value=".jsp"></property>
      </bean>
</beans>